#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram
"""
import os
import asyncio
import telegram
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def test_connection():
    token = os.getenv("TELEGRAM_BOT_TOKEN")
    chat_id = os.getenv("TELEGRAM_CHAT_ID")
    
    print(f"üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"Token: {token[:10]}..." if token else "Token: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")
    print(f"Chat ID: {chat_id}" if chat_id else "Chat ID: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")
    print()
    
    if not token or not chat_id:
        print("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ TELEGRAM_BOT_TOKEN –∏ TELEGRAM_CHAT_ID –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    bot = telegram.Bot(token=token)
    
    # –¢–µ—Å—Ç 1: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
    try:
        me = await bot.get_me()
        print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{me.username} ({me.first_name})")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É: {e}")
        return
    
    # –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        message = await bot.send_message(
            chat_id=chat_id,
            text="‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç InsightFlow"
        )
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print(f"   Message ID: {message.message_id}")
    except telegram.error.Forbidden as e:
        print(f"‚ùå –ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç—É: {e}")
        print("   –†–µ—à–µ–Ω–∏–µ: –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ —á–∞—Ç/–≥—Ä—É–ø–ø—É")
    except telegram.error.BadRequest as e:
        if "Chat not found" in str(e):
            print(f"‚ùå –ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
            print("   –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å TELEGRAM_CHAT_ID")
        else:
            print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram...\n")
    asyncio.run(test_connection())